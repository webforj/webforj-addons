name: Bump Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number"
        required: true
      client_release_type:
        description: 'Client release type (for dwc-addons)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - premajor
          - preminor
          - prepatch
      trigger_client_release:
        description: "Trigger client repository release"
        type: boolean
        required: false
        default: true
      createTag:
        description: "Create a new release"
        type: boolean
        required: false
        default: false

jobs:
  bumpVersion:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Get current client version
        id: current_client_version
        run: |
          # Get current client version from pom.xml
          CLIENT_VERSION=$(mvn help:evaluate -Dexpression=dwc.cdn.version -q -DforceStdout)
          echo "current_client_version=${CLIENT_VERSION}" >> $GITHUB_OUTPUT
          echo "Current client version: ${CLIENT_VERSION}"

      - name: Calculate new client version  
        id: new_client_version
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.current_client_version.outputs.current_client_version }}

      - name: Set new client version
        id: client_version
        run: |
          # Set client version based on client release type
          case "${{ github.event.inputs.client_release_type }}" in
            "major")
              CLIENT_VERSION="${{ steps.new_client_version.outputs.major }}"
              ;;
            "minor")
              CLIENT_VERSION="${{ steps.new_client_version.outputs.minor }}"
              ;;
            "patch")
              CLIENT_VERSION="${{ steps.new_client_version.outputs.patch }}"
              ;;
            "premajor")
              CLIENT_VERSION="${{ steps.new_client_version.outputs.v_major }}"
              ;;
            "preminor")
              CLIENT_VERSION="${{ steps.new_client_version.outputs.v_minor }}"
              ;;
            "prepatch")
              CLIENT_VERSION="${{ steps.new_client_version.outputs.v_patch }}"
              ;;
            esac
          
          echo "client_version=${CLIENT_VERSION}" >> $GITHUB_OUTPUT
          echo "New client version: ${CLIENT_VERSION}"

      - name: Trigger client release
        if: ${{ github.event.inputs.trigger_client_release == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: version.yml
          repo: webforj/dwc-addons
          token: ${{ secrets.GH_PAT }}
          inputs: '{"release-type": "${{ github.event.inputs.client_release_type }}"}'
          ref: main

      - name: Update pom.xml with new client version
        if: ${{ github.event.inputs.trigger_client_release == 'true' }}
        run: |
          echo "Updating dwc.cdn.version to ${{ steps.client_version.outputs.client_version }}"
          
          # Update the dwc.cdn.version property in pom.xml using Maven
          mvn versions:set-property -Dproperty=dwc.cdn.version -DnewVersion=${{ steps.client_version.outputs.client_version }} -q

      - name: Bump version in POM files
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.version }} -q
          mvn versions:commit

      - name: Commit & Push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Create commit message based on whether client release was triggered
          if [ "${{ github.event.inputs.trigger_client_release }}" == "true" ]; then
            COMMIT_MSG="build: bump version to ${{ github.event.inputs.version }} with client version ${{ steps.client_version.outputs.client_version }}"
          else
            COMMIT_MSG="build: bump version to ${{ github.event.inputs.version }}"
          fi
          
          git commit -a -m "$COMMIT_MSG"
          git push origin HEAD:${{ github.ref }}

      - name: Create Release
        if: ${{ github.event.inputs.createTag == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          generateReleaseNotes: true
          tag: ${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          makeLatest: true
